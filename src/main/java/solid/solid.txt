Single Responsibility - Each class should have one purpose and not be filled with excessive functionality.

Open Closed - Classes should be open for extension, closed for modification. In other words, you shouldn't
              have to rewrite an existing class for implementing new features.

Liskov Substitution - Every subclass should be substitutable for their base or parent class.

Interface Segregation - Interfaces shouldn't for classes to implement what they can't do.
                        Divide large interfaces into small ones.

Dependency Inversion - Components should depend on abstractions, not on concretions.